[{"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\index.js":"1","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\App.js":"2","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\EmployeeList.js":"3","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\contexts\\EmployeeContext.js":"4","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\Employee.js":"5","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\AddEditForm.js":"6","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\common.js":"7","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\Loader.js":"8"},{"size":225,"mtime":1668231091835,"results":"9","hashOfConfig":"10"},{"size":261,"mtime":1668408846391,"results":"11","hashOfConfig":"10"},{"size":2180,"mtime":1668409760051,"results":"12","hashOfConfig":"10"},{"size":2550,"mtime":1668410197810,"results":"13","hashOfConfig":"10"},{"size":3065,"mtime":1668410065447,"results":"14","hashOfConfig":"10"},{"size":5890,"mtime":1668409952218,"results":"15","hashOfConfig":"10"},{"size":1546,"mtime":1668407318055,"results":"16","hashOfConfig":"10"},{"size":228,"mtime":1668405349024,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1k9rkmf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\index.js",[],["36","37"],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\App.js",[],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\EmployeeList.js",[],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\contexts\\EmployeeContext.js",[],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\Employee.js",[],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\AddEditForm.js",["38","39"],"import { Form, Button } from \"react-bootstrap\"\n\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\nimport { REGEX, defaultURL } from '../components/common';\nimport axios from \"axios\";\nimport Loader from '../components/Loader'\n\nconst URL = defaultURL.employee, FILES_URL = defaultURL.files;\n\n\nconst AddEditForm = (props) => {\n    // Default Setup\n    const type = props.type;\n    const getDefaultObj = () => {\n        let defaultObj = props.employee ? props.employee : { _id: \"\", name: \"\", dob: \"\", age: \"\", email: \"\", photo: \"\", address: \"\" };\n        defaultObj.dob = defaultObj.dob ? new Date(defaultObj.dob).toLocaleDateString('en-CA') : defaultObj.dob;\n        defaultObj.previewImg = defaultObj.photo ? FILES_URL + defaultObj.photo : \"\";\n        return defaultObj;\n    }\n\n    let errorState = type === 'add' ? false : true;\n    // Context setup \n    const { addOrUpdateEmp } = useContext(EmployeeContext);\n    const [newEmployee, setNewEmployee] = useState(getDefaultObj());\n    const [hasError, setError] = useState(errorState);\n    const [loader, setLoading] = useState(false);\n\n    const uploadFile = async (e) => {\n        e.preventDefault()\n        try {\n            setLoading(true);\n            const formData = new FormData();\n            formData.append(\"selectedFile\", e.target.files[0]);\n            let response = await axios({\n                method: \"post\",\n                url: `${URL}/uploadFile`,\n                data: formData,\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n            response = response.data\n            setLoading(false);\n            if (response && response.success) {\n                let fileName = response.file.filename;\n                setNewEmployee({ ...newEmployee, ...{ \"photo\": fileName, previewImg: FILES_URL + fileName } });\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const onInputChange = (e) => {\n        let val = e.target.value, ipKey = e.target.name, errorFlag = false;\n        if (ipKey === 'photo') val = e.target.files[0]\n        if (ipKey === 'dob') val = new Date(val).toLocaleDateString('en-CA')\n        if ([\"name\", \"email\"].includes(ipKey))\n            errorFlag = val && REGEX[ipKey].test(val) ? true : false;\n\n        setError(errorFlag);\n        setNewEmployee({ ...newEmployee, [ipKey]: val });\n    }\n\n    const { name, dob, age, email, photo, address, previewImg } = newEmployee;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addOrUpdateEmp(newEmployee, type);\n    }\n\n    return (\n        <div className=\"pos-relative\">\n            <Form onSubmit={handleSubmit}>\n                {loader ? <Loader /> : null}\n\n                {/* Name */}\n                <Form.Group>\n                    <Form.Label>Employee Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Name *\"\n                        name=\"name\"\n                        value={name}\n                        onChange={(e) => onInputChange(e)}\n                        required\n                    />\n                </Form.Group>\n\n                {/* email */}\n                <Form.Group>\n                    <Form.Label>Employee Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Email *\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => onInputChange(e)}\n                        required\n                    />\n                </Form.Group>\n\n                {/* address */}\n                <Form.Group>\n                    <Form.Label>Employee Address</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        placeholder=\"Address\"\n                        rows={3}\n                        name=\"address\"\n                        value={address}\n                        onChange={(e) => onInputChange(e)}\n                    />\n                </Form.Group>\n\n                {/* age */}\n                <Form.Group>\n                    <Form.Label>Employee Age</Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"Age\"\n                        name=\"age\"\n                        min=\"0\"\n                        value={age}\n                        onChange={(e) => onInputChange(e)}\n                    />\n                </Form.Group>\n\n                {/* DOB */}\n                <Form.Group>\n                    <Form.Label>Employee DOB</Form.Label>\n                    <Form.Control\n                        type=\"date\"\n                        placeholder=\"DOB\"\n                        name=\"dob\"\n                        value={dob}\n                        onChange={(e) => onInputChange(e)}\n                    />\n                </Form.Group>\n\n                {/* Photo */}\n                <Form.Group>\n                    <Form.Label>Employee profile</Form.Label>\n                    <div className=\"profil-preview\">\n                        {previewImg ? <img src={previewImg} /> : null}\n                        <Form.Control\n                            type=\"file\"\n                            placeholder=\"photo\"\n                            name=\"photo\"\n                            // value={photo}\n                            onChange={(e) => uploadFile(e)}\n                        />\n                    </div>\n                </Form.Group>\n\n                {hasError ? <Button variant=\"success\" type=\"submit\" block>\n                    {type === \"add\" ? \"Add New Employee\" : \"Update\"}\n                </Button> : <div className=\"error-msg\">Please enter valid details</div>}\n\n            </Form>\n        </div >\n\n    )\n}\n\nexport default AddEditForm;","C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\common.js",[],"C:\\Users\\Nirav\\Desktop\\React Projects\\Employee App\\client\\src\\components\\Loader.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":62,"column":36,"nodeType":"47","messageId":"48","endLine":62,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":142,"column":39,"nodeType":"51","endLine":142,"endColumn":63},{"ruleId":"49","severity":1,"message":"50","line":4,"column":13,"nodeType":"51","endLine":4,"endColumn":88},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'photo' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]